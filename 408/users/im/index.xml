<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EGI Documentation â€“ Infrastructure Manager</title><link>/users/im/</link><description>Recent content in Infrastructure Manager on EGI Documentation</description><generator>Hugo -- gohugo.io</generator><atom:link href="/users/im/index.xml" rel="self" type="application/rss+xml"/><item><title>Users: IM CLI</title><link>/users/im/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/users/im/cli/</guid><description>
&lt;p>You can find here documentation on how Getting started with IM Command-Line
Interface on EGI Cloud Compute sites. Full documentation at
&lt;a href="https://imdocs.readthedocs.io/en/latest/client.html">IM CLI documentation&lt;/a>&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;h3 id="install-with-pip">Install with pip&lt;/h3>
&lt;p>You only have to call the install command of the pip tool with the IM-client
package.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">pip install IM-client
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="im-client-docker-image">IM-Client Docker image&lt;/h3>
&lt;p>The IM Client has an official Docker container image available in Docker Hub
that can be used instead of installing the CLI. You can use it by typing:&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ docker run --rm -ti -v &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$PWD&lt;/span>&lt;span style="color:#4e9a06">:/tmp/im&amp;#34;&lt;/span> grycap/im-client -r https://server.com:8800 -a /tmp/im/auth.dat list
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-disable line-length -->
&lt;h3 id="configuration">CONFIGURATION&lt;/h3>
&lt;p>To avoid typing the parameters in all the client calls. The user can define a
config file &amp;ldquo;im_client.cfg&amp;rdquo; in the current directory or a file &amp;ldquo;.im_client.cfg&amp;rdquo;
in their home directory. In the config file the user can specify the following
parameters:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>im_client&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#000">restapi_url&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>https://appsgrycap.i3m.upv.es:31443/im
&lt;span style="color:#000">auth_file&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>auth.dat
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="authentication-data-file">Authentication data file&lt;/h3>
&lt;p>The authorization file stores in plain text the credentials to access the cloud
providers, and the IM service. Each line of the file is composed by pairs of key
and value separated by semicolon, and refers to a single credential. The key and
value should be separated by &amp;quot; = &amp;ldquo;, that is an equals sign preceded and followed
by one whitespace at least. The following lines shows the credentials needed to
access an EGI Cloud Compute site:&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#204a87">type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> InfrastructureManager&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">token&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> egi_aai_token_value
&lt;span style="color:#000">id&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> egi&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87">type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> EGI&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> CESGA&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">vo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> vo.access.egi.eu&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">token&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> egi_aai_token_value
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-disable line-length -->
&lt;p>The value of &lt;code>egi_aai_token_value&lt;/code> must be replace with a valid EGI Check-in
access token. Users of EGI Check-in can getall the information needed to obtain
access tokens, by visiting &lt;a href="https://aai.egi.eu/fedcloud/">Check-in FedCloud client&lt;/a>.&lt;/p>
&lt;p>Also &lt;a href="https://indigo-dc.gitbook.io/oidc-agent/">oidc-agent&lt;/a> can be used to get
allways a valid access token:&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#000">id&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> egi&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87">type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> EGI&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> CESGA&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">vo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> vo.access.egi.eu&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">token&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> command&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>oidc-token OIDC_ACCOUNT&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-disable line-length -->
&lt;h3 id="create-and-manage-an-infrastructure">Create and Manage an infrastructure&lt;/h3>
&lt;p>To create a virtual infrastructure you have to describe a document with the
requirements of the resources requested. IM supports its native language
&lt;a href="https://imdocs.readthedocs.io/en/latest/radl.html">RADL&lt;/a> and the
&lt;a href="http://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.0/csprd02/TOSCA-Simple-Profile-YAML-v1.0-csprd02.html">OASIS TOSCA Simple Profile in YAML Version 1.0&lt;/a>. In the IM GitHub repo
you can find some &lt;a href="https://github.com/grycap/im/tree/master/examples">examples&lt;/a>.&lt;/p>
&lt;p>For example we can use RADL to define a simple VM with 1 CPU, 1 GB of RAM
using the EGI Ubuntu 20.04 image.&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">network publica &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">outbound&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;yes&amp;#39;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
system node &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
cpu.count&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> and
memory.size&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1g and
net_interface.0.connection &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;publica&amp;#39;&lt;/span> and
disk.0.os.name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;linux&amp;#39;&lt;/span> and
disk.0.image.url &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;appdb://egi.ubuntu.20.04?vo.access.egi.eu&amp;#39;&lt;/span> and
&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
configure wn &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
@begin
---
- tasks:
- debug: &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Configured!&amp;#34;&lt;/span>
@end
&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
deploy node &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then we can call the &lt;code>create&lt;/code> operation of the IM client tool:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">im_client.py create infra.radl
Secure connection with: https://appsgrycap.i3m.upv.es:31443/im
Infrastructure successfully created with ID: 457273ea-85e4-11ec-aa81-faaae69bc911
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then we can call the &lt;code>create&lt;/code> operation of the IM client tool:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">im_client.py getstate 457273ea-85e4-11ec-aa81-faaae69bc911
Secure connection with: https://appsgrycap.i3m.upv.es:31443/im
The infrastructure is in state: pending
VM ID: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> is in state: pending.
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-enable line-length -->
&lt;p>Then valid VM and infrastructure states are the following:&lt;/p>
&lt;ul>
&lt;li>&lt;code>pending&lt;/code>, launched, but still in initialization stage;&lt;/li>
&lt;li>&lt;code>running&lt;/code>, created successfully and running, but still in the
configuration stage;&lt;/li>
&lt;li>&lt;code>configured&lt;/code>, running and contextualized;&lt;/li>
&lt;li>&lt;code>unconfigured&lt;/code>, running but not correctly contextualized;&lt;/li>
&lt;li>&lt;code>stopped&lt;/code>, stopped or suspended;&lt;/li>
&lt;li>&lt;code>off&lt;/code>, shutdown or removed from the infrastructure;&lt;/li>
&lt;li>&lt;code>failed&lt;/code>, an error happened during the launching; or&lt;/li>
&lt;li>&lt;code>unknown&lt;/code>, unable to obtain the status.&lt;/li>
&lt;li>&lt;code>deleting&lt;/code>, in the deletion process.&lt;/li>
&lt;/ul>
&lt;p>Once the configuration step has started we can get the output of the ansible
process using the &lt;code>getcontmsg&lt;/code> operation:&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">im_client.py getcontmsg 457273ea-85e4-11ec-aa81-faaae69bc911
Secure connection with: https://appsgrycap.i3m.upv.es:31443/im
Connected with: http://localhost:8800
Msg Contextualizator:
2022-02-11 10:40:12.768523: Copying YAML, hosts and inventory files.
VM 0:
Contextualization agent output processed successfullyGenerate and copy the ssh key
Sleeping &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> secs.
Launch task: wait_all_ssh
...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the VM is booted we can access it via SSH using the &lt;code>ssh&lt;/code> operation:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">im_client.py ssh 457273ea-85e4-11ec-aa81-faaae69bc911
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally once we do not need the Infrastructure we can destroy it using the &lt;code>destroy&lt;/code>
operation:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">im_client.py destroy 457273ea-85e4-11ec-aa81-faaae69bc911
Secure connection with: https://appsgrycap.i3m.upv.es:31443/im
Infrastructure successfully destroyed
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-enable line-length --></description></item><item><title>Users: IM Dashboard</title><link>/users/im/dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/users/im/dashboard/</guid><description>
&lt;p>The IM Dashboard is a graphical interface to access REST APIs of IM Server
specially developed to EOSC users to access EGI Cloud Compute resources.&lt;/p>
&lt;p>Functionalities:&lt;/p>
&lt;ul>
&lt;li>OIDC authentication&lt;/li>
&lt;li>Display user&amp;rsquo;s infrastructures&lt;/li>
&lt;li>Display infrastructure details, template and log&lt;/li>
&lt;li>Delete infrastructure&lt;/li>
&lt;li>Create new infrastructure&lt;/li>
&lt;li>Add nodes to an infrastructure&lt;/li>
&lt;li>Resize VMs&lt;/li>
&lt;/ul>
&lt;p>More details about installation and configuration in the IM Dashboard
documentation page &lt;a href="https://imdocs.readthedocs.io/en/latest/dashboard.html">here&lt;/a>.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>The dashbaord of the IM enables non advanced users to manage their
infrastructures launching a set of predefined TOSCA templates on top of EGI
Cloud Compute resources. The dashboard does not provide all the features
provided by the IM service in case you need more advanced features use the IM
web interface.&lt;/p>
&lt;p>&lt;img src="dash_login.png" alt="Landing page">&lt;/p>
&lt;h3 id="login">Login&lt;/h3>
&lt;p>To login the dashbaord the user will use the &lt;a href="../../check-in">EGI Check-in Service&lt;/a>.
Once authenticated, the user will be redirected to the portfolio of available
TOSCA templates.&lt;/p>
&lt;p>&lt;img src="dash_configure.png" alt="Portfolio page">&lt;/p>
&lt;h3 id="main-menu-bar">Main menu bar&lt;/h3>
&lt;p>The main menu bar is located on top of the pages:&lt;/p>
&lt;ul>
&lt;li>The first button &amp;ldquo;IM Dashboard&amp;rdquo; enables the user to go to the the portfolio of
available TOSCA templates.&lt;/li>
&lt;li>Second item &amp;ldquo;Infrastructures&amp;rdquo; redirects to the list of current user deployed
infrastructures.&lt;/li>
&lt;li>In the &amp;ldquo;Advanced&amp;rdquo; item the &amp;ldquo;Settings&amp;rdquo; subitem enables to see the some
configuration settings as the URL of the IM service or the OIDC issuer.&lt;/li>
&lt;li>&amp;ldquo;External Links&amp;rdquo; show a set of configurables information links (documentation,
video tutorials, etc.)&lt;/li>
&lt;li>Finally on the right top corner appears the &amp;ldquo;User&amp;rdquo; menu item. This item shows
the full name of the logged user, and an avatar obtained from
&lt;a href="https://www.gravatar.com/">Gravatar&lt;/a>. In this menu the user can access their
&amp;ldquo;Cloud Credentials&amp;rdquo; with the cloud providers or logout the application.&lt;/li>
&lt;/ul>
&lt;h3 id="cloud-crecentials">Cloud Crecentials&lt;/h3>
&lt;p>This page enable the user to specify the credentials to access any cloud
provider it has access to. In the list the user can edit, delete and
enable/disable the selected cloud credential.&lt;/p>
&lt;p>&lt;img src="dash_cred_list.png" alt="List of Cloud Crecentials">&lt;/p>
&lt;p>Editing or adding the credentials will show a modal form where the user has the
ability to specify all the parameters needed to access each cloud provider
supported. In particular for &lt;a href="../../cloud-compute">EGI Cloud Compute&lt;/a> sites the
user only has to select one of the VOs he is member and one of sites that
supports that VO. These dropdown fields are generated using the information
available from the sites and the list of VOs the user is member.&lt;/p>
&lt;p>&lt;img src="dash_edit_cred.png" alt="Edit/Add a Crecential">&lt;/p>
&lt;h3 id="tosca-templates">TOSCA Templates&lt;/h3>
&lt;p>The list of available TOSCA templates enable the user to select the required
topology to deploy.Each TOSCA template can be labelled by the TOSCA developer
with any &amp;ldquo;tag&amp;rdquo; that will show a ribbon displayed on the right bottom corner.
An special &amp;ldquo;tag&amp;rdquo; is the elastic one that are used to mark the templates that
are configured to automatically manage the elasticity of the deployed cluster.&lt;/p>
&lt;p>The user have to click on the &amp;ldquo;Configure&amp;rdquo; button to set the input values of the
TOSCA template and also to select the VO, Site and Image to deploy the
infrastructure.&lt;/p>
&lt;p>Initially the user can set a name to describe the infrastructure to be deployed.
It will make easier to list infrastructures. In the firsts tabs the user can
introduce the set of input values of the toplogy. By default there is only one
tab called &amp;ldquo;Input Values&amp;rdquo;, but the TOSCA developer can add/rename them to make
easier the input values selection.&lt;/p>
&lt;p>&lt;img src="dash_inputs.png" alt="TOSCA input values.">&lt;/p>
&lt;p>The final tab will be the &amp;ldquo;Cloud Provider Selection&amp;rdquo;.In this tab the user has to
select: first, one of the Cloud providers that has been previously added (and
not disabled) in the &amp;ldquo;Cloud Crecentials&amp;rdquo; page, then it has to select the base
image used to deploy the VMs.In case of EGI Cloud Compute sites the user has two
options, he can select an image from the list of images provided by the
&lt;a href="https://appdb.egi.eu/">EGI AppDB information system&lt;/a> or from the list provided
directly by the Cloud site.&lt;/p>
&lt;p>Other providers will only show a dropdown list with the available images to use.
Only in the case of AWS Cloud provider the user has to specify manually the AMI
ID of the image to use.&lt;/p>
&lt;p>&lt;img src="dash_site.png" alt="Select Cloud Provider and Image">&lt;/p>
&lt;h3 id="infrastructures">Infrastructures&lt;/h3>
&lt;p>This page will show the list of infrastructures deployed by the current user.
The first column shows the name set by the user on infrastructure creation,
then shows the ID assinged by the IM service, third column shows the current
status of the infrastructure, fourth show the list of VMs with their IDs and
finally appears a button with a set of actions to perform to it.&lt;/p>
&lt;p>&lt;img src="dash_inf_list.png" alt="List of infrastructures.">&lt;/p>
&lt;h4 id="list-of-actions">List of Actions&lt;/h4>
&lt;p>The following figure shows the list of actions available to manage the existing
infrastructures:&lt;/p>
&lt;p>&lt;img src="dash_inf_actions.png" alt="List of infrastructure Actions">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Add nodes: The Add nodes action enables to add new VMs to the users'
deployment. As depicted in it will show the list of different types of nodes
currently deployed in the infrastructure and the user have to set the number
of nodes of each type he wants to deploy.&lt;/p>
&lt;p>&lt;img src="dash_add_nodes.png" alt="Add nodes page">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Show template: This action shows the original TOSCA template submitted to
create the infrastructure.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Log: Shows the error/contextualization log of the infrastructure.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Stop: Stops/Suspends all the VMs of the infrastructure.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start: Starts/Resume previously stopped infrastructure.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Outputs: Shows the outputs of the TOSCA template. In case of private key of
credentials it enables to download it as a file or copy to the clipboard.&lt;/p>
&lt;p>&lt;img src="dash_outputs.png" alt="TOSCA outputs">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Delete: Delete this infrastructure and all the asociated resources. It also
has the option to &amp;ldquo;Force&amp;rdquo; de deletion. In this case the infrastructure will
be removed from the IM service even if some cloud resources cannot be deleted.
&lt;strong>Only use this option if you know what you are doing&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Delete &amp;amp; Recreate: Delete this infrastructure as the previous option, but
once it is deleted it will redirect to the infrastructure creation form, with
all the input fields filled with the same set of values used to create the
deleted infrastructure.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Reconfigure: Starts the reconfiguration of the infrastructure.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="vm-info-page">VM Info page&lt;/h3>
&lt;p>The VM Info page will show all the information about the selected VM and will
enable to manage the lifecycle of it. On the top right corner the &amp;ldquo;Manage VM&amp;rdquo;
dropdown menu will enable: Stop/Start, Reboot, Resize, Reconfigure and Terminate
the VM. Furthermore the user can check the error/contextualization log of this
particular VM.&lt;/p>
&lt;p>The VM infomation is splitted in two dofferent tables, the first one with the
main information: State, IPs, HW features and the SSH credentials needed to
access it. Second table will show other additional fields.&lt;/p>
&lt;p>&lt;img src="dash_vm_info.png" alt="VM Info page">&lt;/p>
&lt;p>In case of Resizing the VM the user must provide the new size of the VM in terms
of number of CPUs and ammount of memory as show in next figure:&lt;/p>
&lt;p>&lt;img src="dash_vm_resize.png" alt="VM Resize modal form.">&lt;/p></description></item></channel></rss>